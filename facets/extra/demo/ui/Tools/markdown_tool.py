"""
# MarkdownTool: A Facets component tool. #

Perspective:

- Markdown

Component Tools:

- Markdown
- TextFile

Supported Features:

- DebugFeature

Generated by:

- facets.extra.tools.tools

Date/Time:

- Wednesday, February 05, 2014 at 10:08:53 AM
"""

#-------------------------------------------------------------------------------
#  Imports:
#-------------------------------------------------------------------------------

from facets.extra.helper.generated_tool \
    import GeneratedTool, ToolInstance, Connection

from facets.extra.tools.markdown \
    import Markdown

from facets.extra.tools.text_file \
    import TextFile

from facets.extra.features.debug_feature \
    import DebugFeature

#-------------------------------------------------------------------------------
#  'MarkdownTool' class:
#-------------------------------------------------------------------------------

class MarkdownTool ( GeneratedTool ):

    #-- Class Constants --------------------------------------------------------

    #-- Facet Definitions ------------------------------------------------------

    # The name of the tool:
    name = 'Markdown Tool'

    # The component tools:
    tool_1 = ToolInstance( Markdown, 'Markdown' )
    tool_2 = ToolInstance( TextFile, 'Text' )

    # The list of features used by the tool:
    features = [ DebugFeature ]

    # The DockWindow tab style to use for each component tool:
    dock_style = 'tab'

    # The default width and height of the tool:
    width  = 0.60
    height = 0.71

    # The pickled string form of the layout template used by the tool contents:
    _template = ("cfacets.core.facet_defs\n__newobj__\np1\n(cfacets.ui.dock.doc"
        "k_section\nDockSection\np2\ntRp3\n(dp4\nS'splitters'\np5\nccopy_reg\n_"
        "reconstructor\np6\n(cfacets.core.facet_collections\nFacetListObject\np"
        "7\nc__builtin__\nlist\np8\n(lp9\ng1\n(cfacets.ui.dock.dock_splitter\nD"
        "ockSplitter\np10\ntRp11\n(dp12\nS'control'\np13\nNsS'index'\np14\nI0\n"
        "sS'style'\np15\nS'horizontal'\np16\nsS'selected'\np17\nI00\nsS'feature"
        "s'\np18\ng6\n(g7\ng8\n(ltRp19\n(dp20\nS'name_items'\np21\nS'features_i"
        "tems'\np22\nsS'object'\np23\ng11\nsS'name'\np24\ng18\nsbsS'parent'\np2"
        "5\ng3\nsS'feature_mode'\np26\nI-1\nsS'drop_features'\np27\ng6\n(g7\ng8"
        "\n(ltRp28\n(dp29\ng21\nS'drop_features_items'\np30\nsg23\ng11\nsg24\ng"
        "27\nsbsS'max_tab_length'\np31\nI60\nsS'bounds'\np32\n(I0\nI0\nI0\nI0\n"
        "tp33\nsS'height'\np34\nI-1\nsS'width'\np35\nI-1\nsS'__facets_version__"
        "'\np36\nS'0.1'\np37\nsS'drag_bounds'\np38\ng33\nsS'closeable'\np39\nI0"
        "0\nsS'tab_state'\np40\nNsg24\nS''\nsbatRp41\n(dp42\ng21\nS'splitters_i"
        "tems'\np43\nsg23\ng3\nsg24\ng5\nsbsg17\nI00\nsg18\ng6\n(g7\ng8\n(ltRp4"
        "4\n(dp45\ng21\nS'features_items'\np46\nsg23\ng3\nsg24\ng18\nsbsg25\nNs"
        "g35\nI1529\nsg26\nI-1\nsg31\nI60\nsg32\ng33\nsg38\ng33\nsS'dock_window"
        "'\np47\nNsg27\ng6\n(g7\ng8\n(ltRp48\n(dp49\ng21\nS'drop_features_items"
        "'\np50\nsg23\ng3\nsg24\ng27\nsbsg36\ng37\nsS'contents'\np51\ng6\n(g7\n"
        "g8\n(lp52\ng1\n(cfacets.ui.dock.dock_region\nDockRegion\np53\ntRp54\n("
        "dp55\ng17\nI00\nsg18\ng6\n(g7\ng8\n(ltRp56\n(dp57\ng21\nS'features_ite"
        "ms'\np58\nsg23\ng54\nsg24\ng18\nsbsg25\ng3\nsg35\nI1529\nsg26\nI-1\nsS"
        "'max_tab'\np59\nI0\nsS'tab_scroll_index'\np60\nI-1\nsg31\nI60\nsg32\ng"
        "33\nsg38\ng33\nsg27\ng6\n(g7\ng8\n(ltRp61\n(dp62\ng21\nS'drop_features"
        "_items'\np63\nsg23\ng54\nsg24\ng27\nsbsg36\ng37\nsg51\ng6\n(g7\ng8\n(l"
        "p64\ng1\n(cfacets.ui.dock.dock_control\nDockControl\np65\ntRp66\n(dp67"
        "\ng13\nNsg18\ng6\n(g7\ng8\n(ltRp68\n(dp69\ng21\nS'features_items'\np70"
        "\nsg23\ng66\nsg24\ng18\nsbsS'image'\np71\nNsg34\nI482\nsS'num_window_f"
        "eatures'\np72\nI0\nsS'visible'\np73\nI01\nsS'export'\np74\nS''\nsS'id'"
        "\np75\nS'Markdown'\np76\nsS'num_global_features'\np77\nI0\nsg15\nS'tab"
        "'\np78\nsS'resizable'\np79\nI01\nsg26\nI-1\nsg17\nI00\nsg35\nI1523\nsS"
        "'user_style'\np80\nI00\nsS'user_name'\np81\nI00\nsg36\ng37\nsg25\ng54"
        "\nsg38\ng33\nsS'on_close'\np82\nNsg40\nNsS'dockable'\np83\nNsS'locked'"
        "\np84\nI00\nsg24\ng76\nsg27\ng6\n(g7\ng8\n(ltRp85\n(dp86\ng21\nS'drop_"
        "features_items'\np87\nsg23\ng66\nsg24\ng27\nsbsg31\nI60\nsg32\ng33\nsg"
        "39\nI00\nsbatRp88\n(dp89\ng21\nS'contents_items'\np90\nsg23\ng54\nsg24"
        "\ng51\nsbsS'active'\np91\nI0\nsg34\nI509\nsS'left_tab'\np92\nI0\nsg40"
        "\nNsbag1\n(g53\ntRp93\n(dp94\ng17\nI00\nsg18\ng6\n(g7\ng8\n(ltRp95\n(d"
        "p96\ng21\nS'features_items'\np97\nsg23\ng93\nsg24\ng18\nsbsg25\ng3\nsg"
        "35\nI1529\nsg26\nI-1\nsg59\nI0\nsg60\nI-1\nsg31\nI60\nsg32\ng33\nsg38"
        "\ng33\nsg27\ng6\n(g7\ng8\n(ltRp98\n(dp99\ng21\nS'drop_features_items'"
        "\np100\nsg23\ng93\nsg24\ng27\nsbsg36\ng37\nsg51\ng6\n(g7\ng8\n(lp101\n"
        "g1\n(g65\ntRp102\n(dp103\ng13\nNsg18\ng6\n(g7\ng8\n(ltRp104\n(dp105\ng"
        "21\nS'features_items'\np106\nsg23\ng102\nsg24\ng18\nsbsg71\nNsg34\nI48"
        "2\nsg72\nI0\nsg73\nI01\nsg74\nS''\nsg75\nS'Text'\np107\nsg77\nI0\nsg15"
        "\ng78\nsg79\nI01\nsg26\nI-1\nsg17\nI00\nsg35\nI1523\nsg80\nI00\nsg81\n"
        "I00\nsg36\ng37\nsg25\ng93\nsg38\ng33\nsg82\nNsg40\nNsg83\nNsg84\nI00\n"
        "sg24\ng107\nsg27\ng6\n(g7\ng8\n(ltRp108\n(dp109\ng21\nS'drop_features_"
        "items'\np110\nsg23\ng102\nsg24\ng27\nsbsg31\nI60\nsg32\ng33\nsg39\nI00"
        "\nsbatRp111\n(dp112\ng21\nS'contents_items'\np113\nsg23\ng93\nsg24\ng5"
        "1\nsbsg91\nI0\nsg34\nI509\nsg92\nI0\nsg40\nNsbatRp114\n(dp115\ng21\nS'"
        "contents_items'\np116\nsg23\ng3\nsg24\ng51\nsbsg34\nI1022\nsg40\nNsS'i"
        "s_row'\np117\nI00\nsb.")

    #-- Facet Default Values ---------------------------------------------------

    def _connections_default ( self ):
        return [
            Connection( connection = 'from',
                        object1    = self.tool_2,
                        name1      = 'text',
                        object2    = self.tool_1,
                        name2      = 'markdown'
            )
        ]

#-- Make tool compatible with Facets demo framework ----------------------------

demo = MarkdownTool

#-- Start the tool (if invoked from the command line) --------------------------

if __name__ == '__main__':
    MarkdownTool().edit_facets()

#-- EOF ------------------------------------------------------------------------
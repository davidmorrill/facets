"""
TextSnippets: A Facets component tool.

Generated by:
  facets.extra.tools.tools

Perspective:
  Text Snippets

Date/Time:
  Saturday, September 10, 2011 at 11:46:18 AM

Component Tools:
  Clipboard
  TextCollector

Supported Features:
  DebugFeature
  OptionsFeature
  SaveStateFeature
"""

#-------------------------------------------------------------------------------
#  Imports:
#-------------------------------------------------------------------------------

from cPickle \
    import loads

from facets.api \
    import HasPrivateFacets, List, Any, Instance, View, Item, NotebookEditor

from facets.extra.tools.tools \
    import Connection

from facets.extra.tools.clipboard \
    import Clipboard

from facets.extra.tools.text_collector \
    import TextCollector

from facets.extra.features.debug_feature \
    import DebugFeature

from facets.extra.features.options_feature \
    import OptionsFeature

from facets.extra.features.save_state_feature \
    import SaveStateFeature

#-------------------------------------------------------------------------------
#  'TextSnippets' class:
#-------------------------------------------------------------------------------

class TextSnippets ( HasPrivateFacets ):

    #-- Class Constants --------------------------------------------------------

    # The pickled string form of the layout template used by the tool contents:
    _template = "cfacets.core.facet_defs\n__newobj__\np1\n(cfacets.ui.dock.dock_section\nDockSection\np2\ntRp3\n(dp4\nS'splitters'\np5\nccopy_reg\n_reconstructor\np6\n(cfacets.core.facet_collections\nFacetListObject\np7\nc__builtin__\nlist\np8\n(ltRp9\n(dp10\nS'name_items'\np11\nS'splitters_items'\np12\nsS'object'\np13\ng3\nsS'name'\np14\ng5\nsbsS'selected'\np15\nI00\nsS'features'\np16\ng6\n(g7\ng8\n(ltRp17\n(dp18\ng11\nS'features_items'\np19\nsg13\ng3\nsg14\ng16\nsbsS'parent'\np20\nNsS'width'\np21\nI1667\nsS'feature_mode'\np22\nI-1\nsS'max_tab_length'\np23\nI30\nsS'bounds'\np24\n(I0\nI0\nI0\nI0\ntp25\nsS'drag_bounds'\np26\ng25\nsS'dock_window'\np27\nNsS'drop_features'\np28\ng6\n(g7\ng8\n(ltRp29\n(dp30\ng11\nS'drop_features_items'\np31\nsg13\ng3\nsg14\ng28\nsbsS'__facets_version__'\np32\nS'0.1'\np33\nsS'contents'\np34\ng6\n(g7\ng8\n(lp35\ng1\n(cfacets.ui.dock.dock_region\nDockRegion\np36\ntRp37\n(dp38\ng15\nI00\nsg16\ng6\n(g7\ng8\n(ltRp39\n(dp40\ng11\nS'features_items'\np41\nsg13\ng37\nsg14\ng16\nsbsg20\ng3\nsg21\nI1667\nsg22\nI-1\nsS'max_tab'\np42\nI0\nsS'tab_scroll_index'\np43\nI-1\nsg23\nI30\nsg24\ng25\nsg26\ng25\nsg28\ng6\n(g7\ng8\n(ltRp44\n(dp45\ng11\nS'drop_features_items'\np46\nsg13\ng37\nsg14\ng28\nsbsg32\ng33\nsg34\ng6\n(g7\ng8\n(lp47\ng1\n(cfacets.ui.dock.dock_control\nDockControl\np48\ntRp49\n(dp50\nS'control'\np51\nNsg16\ng6\n(g7\ng8\n(ltRp52\n(dp53\ng11\nS'features_items'\np54\nsg13\ng49\nsg14\ng16\nsbsS'image'\np55\nNsS'height'\np56\nI967\nsS'num_window_features'\np57\nI0\nsS'visible'\np58\nI01\nsS'export'\np59\nS''\nsS'id'\np60\nS'Clipboard'\np61\nsS'num_global_features'\np62\nI0\nsS'style'\np63\nS'tab'\np64\nsS'resizable'\np65\nI01\nsg22\nI-1\nsg15\nI00\nsg21\nI1661\nsS'user_style'\np66\nI00\nsS'user_name'\np67\nI00\nsg32\ng33\nsg20\ng37\nsg26\ng25\nsS'on_close'\np68\nNsS'tab_state'\np69\nNsS'dockable'\np70\nNsS'locked'\np71\nI00\nsg14\ng61\nsg28\ng6\n(g7\ng8\n(ltRp72\n(dp73\ng11\nS'drop_features_items'\np74\nsg13\ng49\nsg14\ng28\nsbsg23\nI30\nsg24\ng25\nsS'closeable'\np75\nI00\nsbag1\n(g48\ntRp76\n(dp77\ng51\nNsg16\ng6\n(g7\ng8\n(ltRp78\n(dp79\ng11\nS'features_items'\np80\nsg13\ng76\nsg14\ng16\nsbsg55\nNsg56\nI967\nsg57\nI0\nsg58\nI01\nsg59\nS''\nsg60\nS'Text Collector'\np81\nsg62\nI0\nsg63\ng64\nsg65\nI01\nsg22\nI-1\nsg15\nI00\nsg21\nI1661\nsg66\nI00\nsg67\nI00\nsg32\ng33\nsg20\ng37\nsg26\ng25\nsg68\nNsg69\nNsg70\nNsg71\nI00\nsg14\ng81\nsg28\ng6\n(g7\ng8\n(ltRp82\n(dp83\ng11\nS'drop_features_items'\np84\nsg13\ng76\nsg14\ng28\nsbsg23\nI30\nsg24\ng25\nsg75\nI00\nsbatRp85\n(dp86\ng11\nS'contents_items'\np87\nsg13\ng37\nsg14\ng34\nsbsS'active'\np88\nI1\nsg56\nI992\nsS'left_tab'\np89\nI0\nsg69\nNsbatRp90\n(dp91\ng11\nS'contents_items'\np92\nsg13\ng3\nsg14\ng34\nsbsg56\nI992\nsg69\nNsS'is_row'\np93\nI00\nsb."

    #-- Facet Definitions ------------------------------------------------------

    # The component tools:
    tool_1 = Instance( Clipboard, { 'name': 'Clipboard' } )
    tool_2 = Instance( TextCollector, { 'name': 'Text Collector' } )

    # The list of all component tools:
    tools = List

    # The layout template for the tools:
    template = Any

    # The list of all inter-tool connections:
    connections = List

    #-- Facet View Definitions -------------------------------------------------

    def default_facets_view ( self ):
        """ Returns the View to use with this perspective.
        """
        return View(
            Item( 'tools',
                  style      = 'custom',
                  show_label = False,
                  id         = 'tools',
                  editor     = NotebookEditor(
                      features = [
                          DebugFeature,
                          OptionsFeature,
                          SaveStateFeature
                      ],
                      dock_style = 'tab',
                      page_name  = '.name',
                      template   = 'template'
                  )
            ),
            title     = 'Text Snippets Tool',
            id        = 'facets.extra.tools.tools.generated.TextSnippets',
            resizable = True,
            width     = 0.5,
            height    = 0.298
        )

    #-- HasFacets Method Overrides ---------------------------------------------

    def facets_init ( self ):
        """ Initializes all of the inter-tool connections.
        """
        self.tools = [
            self.tool_1,
            self.tool_2
        ]
        self.connections = [
            Connection( connection = 'from',
                        object1    = self.tool_1,
                        name1      = 'text',
                        object2    = self.tool_2,
                        name2      = 'input_text'
            ),
            Connection( connection = 'to',
                        object1    = self.tool_1,
                        name1      = 'text',
                        object2    = self.tool_2,
                        name2      = 'output_text'
            )
        ]

    #-- Facet Default Values ---------------------------------------------------

    def _template_default ( self ):
        return loads( self._template )

#-- Create the demo version of the tool ----------------------------------------

demo = TextSnippets

#-- Start the tool (if invoked from the command line) --------------------------

if __name__ == '__main__':
    demo().edit_facets()

#-- EOF ------------------------------------------------------------------------